(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    416103,       8592]
NotebookOptionsPosition[    401624,       8242]
NotebookOutlinePosition[    401981,       8258]
CellTagsIndexPosition[    401938,       8255]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"1", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu2", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1", " ", "=", " ", 
   RowBox[{"-", "50"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", " ", "=", " ", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x01", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma1", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x02", " ", "=", " ", 
   RowBox[{"-", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma2", " ", "=", " ", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f3", " ", "=", "   ", 
    RowBox[{"0", " ", "010."}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha1", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alpha2", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaussian", "[", 
    RowBox[{"mu_", ",", " ", "sigma_", ",", "x_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"1", " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"sigma", " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", " ", "-", " ", "mu"}], ")"}], "^", "2"}]}], "  ", "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"sigma", "^", "2"}]}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gaussianPrime", "[", 
     RowBox[{"mu_", ",", " ", "sigma_", ",", " ", "x_"}], "]"}], " ", "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "mu"}], "+", "x"}], ")"}], "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["sigma", "2"]}]]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "mu"}], "+", "x"}], ")"}]}], 
     RowBox[{
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", 
      SuperscriptBox["sigma", "3"]}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nestx0", " ", "=", " ", "x01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foodx0", " ", "=", " ", "x02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nestSigma", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foodSigma", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foodRate", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nestRate", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"food", " ", "=", " ", 
   RowBox[{"foodRate", " ", "*", " ", 
    RowBox[{"gaussian", "[", 
     RowBox[{"foodx0", ",", " ", "foodSigma", ",", " ", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nest", " ", "=", " ", 
    RowBox[{"nestRate", " ", "*", " ", 
     RowBox[{"gaussian", "[", 
      RowBox[{"nestx0", ",", " ", "nestSigma", ",", " ", "x"}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c1", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"mu1", " ", "*", " ", 
      RowBox[{"D", "[", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"c1", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}], " ", 
         "\[IndentingNewLine]", "-", " ", 
         RowBox[{"f1", " ", 
          RowBox[{"c1", "[", 
           RowBox[{"x", ",", "t"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c2", "[", 
              RowBox[{"x", ",", "t"}], "]"}], " ", "-", 
             RowBox[{"alpha1", " ", 
              RowBox[{"c1", "[", 
               RowBox[{"x", ",", "t"}], "]"}]}]}], ",", "x"}], "]"}]}], " ", 
         "-", " ", 
         RowBox[{"f3", " ", 
          RowBox[{"(", 
           RowBox[{"c1", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ")"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c1", "[", 
              RowBox[{"x", ",", "t"}], "]"}], " ", "+", " ", 
             RowBox[{"c2", "[", 
              RowBox[{"x", ",", "t"}], "]"}]}], ",", "x"}], "]"}]}]}], "  ", 
        ",", " ", "x"}], "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"c2", "[", 
       RowBox[{"x", ",", "t"}], "]"}], "nest"}], " ", "-", 
     RowBox[{
      RowBox[{"c1", "[", 
       RowBox[{"x", ",", "t"}], "]"}], "food"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ic1", " ", "=", " ", 
   RowBox[{
    RowBox[{"c1", "[", 
     RowBox[{"x", ",", "0"}], "]"}], " ", "\[Equal]", 
    RowBox[{"gaussian", "[", 
     RowBox[{"x01", ",", "sigma1", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc1L", " ", "=", " ", 
   RowBox[{
    RowBox[{"c1", "[", 
     RowBox[{"L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{"gaussian", "[", 
     RowBox[{"x01", ",", " ", "sigma1", ",", " ", "L1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc1R", " ", "=", " ", 
   RowBox[{
    RowBox[{"c1", "[", 
     RowBox[{"L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{"gaussian", "[", 
     RowBox[{"x01", ",", " ", "sigma1", ",", " ", "L2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope1L", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
     RowBox[{"L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bcSlope1R", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", 
        RowBox[{"1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
      RowBox[{"L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c2", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", "\[Equal]", 
    " ", 
    RowBox[{
     RowBox[{"mu2", " ", "*", " ", 
      RowBox[{"D", " ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"c2", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}], 
         "\[IndentingNewLine]", " ", "-", " ", 
         RowBox[{"f2", " ", 
          RowBox[{"c2", "[", 
           RowBox[{"x", ",", "t"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c1", "[", 
              RowBox[{"x", ",", "t"}], "]"}], " ", "-", " ", 
             RowBox[{"alpha2", " ", 
              RowBox[{"c2", "[", 
               RowBox[{"x", ",", "t"}], "]"}]}]}], ",", "x"}], "]"}]}], "  ", 
         "-", " ", 
         RowBox[{"f3", " ", 
          RowBox[{"(", 
           RowBox[{"c2", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ")"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c1", "[", 
              RowBox[{"x", ",", "t"}], "]"}], " ", "+", " ", 
             RowBox[{"c2", "[", 
              RowBox[{"x", ",", "t"}], "]"}]}], ",", "x"}], "]"}]}]}], " ", 
        ",", " ", "x"}], "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"c1", "[", 
       RowBox[{"x", ",", "t"}], "]"}], "food"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"c2", "[", 
       RowBox[{"x", ",", "t"}], "]"}], "nest"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ic2", " ", "=", " ", 
   RowBox[{
    RowBox[{"c2", "[", 
     RowBox[{"x", ",", "0"}], "]"}], " ", "==", " ", 
    RowBox[{"gaussian", "[", 
     RowBox[{"x02", ",", "sigma2", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc2L", " ", "=", " ", 
   RowBox[{
    RowBox[{"c2", "[", 
     RowBox[{"L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{"gaussian", "[", 
     RowBox[{"x02", ",", " ", "sigma2", ",", " ", "L1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc2R", " ", "=", " ", 
   RowBox[{
    RowBox[{"c2", "[", 
     RowBox[{"L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{"gaussian", "[", 
     RowBox[{"x02", ",", " ", "sigma2", ",", " ", "L2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope2L", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
     RowBox[{"L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bcSlope2R", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", 
        RowBox[{"1", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
      RowBox[{"L2", ",", "t"}], "]"}], " ", "\[Equal]", "0"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", " ", "=", " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eq1", ",", " ", "ic1", ",", " ", "bcSlope1L", ",", " ", "bcSlope1R", 
        ",", " ", "eq2", ",", " ", "ic2", ",", " ", "bcSlope2L", ",", "  ", 
        "bcSlope2R"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c1", ",", " ", "c2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "L1", ",", " ", "L2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"c1", "[", 
          RowBox[{"x", ",", "t"}], "]"}], "/.", " ", "sol"}], "]"}], ",", " ", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"c2", "[", 
          RowBox[{"x", ",", "t"}], "]"}], "/.", " ", "sol"}], "]"}], ",", " ", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c1", "[", 
            RowBox[{"x", ",", "t"}], "]"}], " ", "+", 
           RowBox[{"c2", "[", 
            RowBox[{"x", ",", "t"}], "]"}]}], ")"}], "/.", " ", "sol"}], 
        "]"}], ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "L1", ",", " ", "L2"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.64155970647539*^9, 3.64156000950581*^9}, {
   3.641560054138812*^9, 3.641560081219214*^9}, {3.6415602126279697`*^9, 
   3.641560400127048*^9}, {3.641560455942485*^9, 3.641560558883304*^9}, {
   3.641560590019862*^9, 3.641560636853641*^9}, {3.641560676639782*^9, 
   3.641560890012772*^9}, {3.641560927896212*^9, 3.641561330364471*^9}, {
   3.641561666589508*^9, 3.641561806173834*^9}, {3.641562859445421*^9, 
   3.6415629700712013`*^9}, {3.6415631675843687`*^9, 3.641563248993762*^9}, {
   3.641565623865547*^9, 3.641565666671115*^9}, {3.641565758965538*^9, 
   3.641565761313472*^9}, {3.6415660563380003`*^9, 3.641566145701455*^9}, {
   3.6415662687576017`*^9, 3.641566399513493*^9}, {3.641566448165312*^9, 
   3.6415665119558372`*^9}, {3.641566551807712*^9, 3.641566551942383*^9}, {
   3.64156659265551*^9, 3.641566620230659*^9}, {3.6415666582061768`*^9, 
   3.641566658690814*^9}, {3.6415667210198927`*^9, 3.641566922825198*^9}, {
   3.64156698100148*^9, 3.6415670245199633`*^9}, 3.641567130536269*^9, 
   3.641567169288888*^9, {3.64156723120721*^9, 3.64156726526615*^9}, {
   3.641567424897766*^9, 3.641567431712977*^9}, {3.641567624448206*^9, 
   3.641567644562585*^9}, {3.641567903474684*^9, 3.641567943117659*^9}, {
   3.641567986998458*^9, 3.641568131761709*^9}, {3.641568177237297*^9, 
   3.641568196556061*^9}, {3.6415682784803047`*^9, 3.641568282813896*^9}, 
   3.641568313281411*^9, {3.641568346015211*^9, 3.641568347052721*^9}, {
   3.641568409312093*^9, 3.641568429958826*^9}, {3.641568562886551*^9, 
   3.641568576948893*^9}, {3.641568654871336*^9, 3.641568656391798*^9}, {
   3.641568695978183*^9, 3.641568755668092*^9}, {3.6415688595511017`*^9, 
   3.641568898409133*^9}, {3.641568945569757*^9, 3.641569032004449*^9}, {
   3.641569090162808*^9, 3.641569117181346*^9}, {3.64156915310507*^9, 
   3.641569250505156*^9}, {3.641569371474551*^9, 3.6415693742399597`*^9}, {
   3.641569447724515*^9, 3.641569457122493*^9}, 3.641569620679205*^9, {
   3.641569697740292*^9, 3.641569758345504*^9}, {3.641569799154141*^9, 
   3.641569838801602*^9}, {3.641569888659116*^9, 3.641569902642336*^9}, {
   3.64156999818896*^9, 3.641570028688949*^9}, {3.641570084534779*^9, 
   3.641570086245071*^9}, {3.641570137629961*^9, 3.641570139985259*^9}, {
   3.641570210544772*^9, 3.641570210856306*^9}, {3.6415702588733177`*^9, 
   3.641570260718747*^9}, {3.641570352815032*^9, 3.641570480107155*^9}, {
   3.641570531461834*^9, 3.6415706642411547`*^9}, {3.641570709607812*^9, 
   3.641570851002534*^9}, {3.64157088175556*^9, 3.641570905572236*^9}, {
   3.6415709396150923`*^9, 3.641570978713583*^9}, {3.64157101386261*^9, 
   3.6415711227170477`*^9}, {3.641571159039963*^9, 3.641571174147333*^9}, {
   3.641571206080035*^9, 3.641571336327547*^9}, {3.641571380261644*^9, 
   3.641571408619419*^9}, {3.641571530716707*^9, 3.641571532738823*^9}, {
   3.641571766358371*^9, 3.6415717717430277`*^9}, {3.641571806333074*^9, 
   3.6415718076904497`*^9}, {3.641571861616879*^9, 3.641571972849774*^9}, {
   3.641580596728787*^9, 3.641580679209875*^9}, {3.641580713879058*^9, 
   3.641580728551393*^9}, {3.641581660598255*^9, 3.641581718573227*^9}, {
   3.6415817550347147`*^9, 3.641581768019641*^9}, {3.641581827445485*^9, 
   3.641581890205777*^9}, {3.6416894912598953`*^9, 3.6416895115560703`*^9}, 
   3.64168997098427*^9, 3.642351336489808*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "setraw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot assign to raw object \
\[NoBreak]\\!\\(1\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/setraw\\\", ButtonNote -> \
\\\"Set::setraw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6423520254478703`*^9, 3.642352382684922*^9, 
  3.642361084163506*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 1000}}, Typeset`size$$ = {
    962., {20.19921875, 9.80078125}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$14873$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$14873$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Evaluate[
          ReplaceAll[
           $CellContext`c1[$CellContext`x, $CellContext`t$$], \
$CellContext`sol]], 
         Evaluate[
          ReplaceAll[
           $CellContext`c2[$CellContext`x, $CellContext`t$$], \
$CellContext`sol]], 
         Evaluate[
          
          ReplaceAll[$CellContext`c1[$CellContext`x, $CellContext`t$$] + \
$CellContext`c2[$CellContext`x, $CellContext`t$$], $CellContext`sol]], 
         0}, {$CellContext`x, $CellContext`L1, $CellContext`L2}, PlotRange -> 
        All], "Specifications" :> {{$CellContext`t$$, 0, 1000}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1007., {57., 62.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.641689557769266*^9, 3.64168997246749*^9, 
  3.642125374246888*^9, 3.642158265041916*^9, 3.642350665058213*^9, 
  3.642351314957221*^9, 3.642352026213417*^9, 3.642352383463181*^9, 
  3.642361084728677*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009216614583*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009216653495*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009216665174*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009216703648*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64400921676455*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009216834937*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009558698822*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6440095587533197`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009558766927*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009558782322*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009558847562*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009558927032*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64400957376322*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6440095738228903`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009573839047*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64400957385078*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6440095739121447`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009573989293*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009588760023*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009588826544*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009588839068*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009588891787*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6440095889623413`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64400958905789*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009598512739*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009598554389*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009598604611*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009598611498*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009598679433*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644009598770426*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417490110285*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441749011905613`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644174901194306*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441749011979847`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644174901245082*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644174901298244*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "deqn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equation or list of equations expected instead of \
\[NoBreak]\\!\\(ic2\\)\[NoBreak] in the first argument \
\[NoBreak]\\!\\({\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((0, 0, 0, 1)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \
\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), ic2}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/deqn\\\", \
ButtonNote -> \\\"NDSolve::deqn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441754816225357`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), ic2}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175481652607*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), ic2}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175481683907*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), ic2}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175481703874*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175481730081*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "deqn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equation or list of equations expected instead of \
\[NoBreak]\\!\\(ic2\\)\[NoBreak] in the first argument \
\[NoBreak]\\!\\({\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((0, 0, 0, 1)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \
\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), ic2}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/deqn\\\", \
ButtonNote -> \\\"NDSolve::deqn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175481762422*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "deqn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equation or list of equations expected instead of \
\[NoBreak]\\!\\(ic2\\)\[NoBreak] in the first argument \
\[NoBreak]\\!\\({\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((0, 0, 0, 1)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \
\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), ic2}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/deqn\\\", \
ButtonNote -> \\\"NDSolve::deqn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175481768002*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: deqn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175481800748*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417548184641*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417548191433*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417550897642*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441755090133667`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441755090329943`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175509058736*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175509064517*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175509097926*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175509117021*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: ndode\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175509148048*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175509197348*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175509266573*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175649399477*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756494645844`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175649471027*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175649477811*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417564951749*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756495461884`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417564955027*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: ndode\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175649584633*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756496354027`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175649706542*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175660269741*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\\\ \
0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\) + \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) - \\(\\(\\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 0\\_\\(on\\_0\\)\\/0\\_\
\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175660299073*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\\\ \
0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\) + \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) - \\(\\(\\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 0\\_\\(on\\_0\\)\\/0\\_\
\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756603203497`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\\\ \
0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\) + \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) - \\(\\(\\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 0\\_\\(on\\_0\\)\\/0\\_\
\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175660352673*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756603847513`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175660388966*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175660417898*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: ndode\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175660435789*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756604786*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175660541514*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756646829357`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\\\ \
0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\) + \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) - \\(\\(\\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 0\\_\\(on\\_0\\)\\/0\\_\
\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175664718493*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\\\ \
0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\) + \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) - \\(\\(\\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 0\\_\\(on\\_0\\)\\/0\\_\
\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175664738781*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\\\ \
0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\) + \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) - \\(\\(\\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\\\ 0\\_\\(Subscript[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 0\\_\\(on\\_0\\)\\/0\\_\
\\(Subscript[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756647689257`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175664775823*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756648054934`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756648314123`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: ndode\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175664849696*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175664899867*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441756649695053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441758421904087`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175842230048*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({sol}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417584223454*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441758422608356`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441758423065453`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175842373728*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175894172021*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175894202711*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175894221977*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175894252345*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175894258121*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175894285185*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175894302972*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: ndode\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441758943328114`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441758943769827`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175894449073*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441759137239103`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417591376155*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175913767519*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417591378719*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441759138175583`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175913842594*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441759138606052`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: ndode\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417591389888*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175913947137*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644175914022902*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441764911132107`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176491143465*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176491163589*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) \
+ \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176491194139*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176491227066*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176491231441*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176491260254*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: ndode\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176491264542*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176491312551*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441764913822308`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176550394105*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) - \
\\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(10, 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), 0, 0\
\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \
\[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((0, 0, 0, 1)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \
\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441765504237423`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) - \
\\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(10, 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), 0, 0\
\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \
\[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((0, 0, 0, 1)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \
\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176550444529*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 0, 0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) - \
\\(\\(100\\\\ \\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, 0, 0, \
t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(10, 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), 0, 0\
\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \
\[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((0, 0, 0, 1)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, 0, 0, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \
\\(\\(C1[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, 0, 0, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0, 0, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \
\\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176550471796*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176550498164*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176550517016*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndode"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input is not an ordinary differential equation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/ndode\\\", \
ButtonNote -> \\\"NDSolve::ndode\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441765505449038`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: ndode\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176550549328*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176550594274*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441765506646223`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "derlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The length of the derivative operator \
\[NoBreak]\\!\\(Derivative[\\(\\(1, 0, 0\\)\\)]\\)\[NoBreak] in \[NoBreak]\\!\
\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\[NoBreak] is \
not the same as the number of arguments. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/derlen\\\", ButtonNote -> \
\\\"NDSolve::derlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441766595243692`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\
\\\", TagBox[\\((2, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \
\[Equal] \\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\
\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \\(\\({C1, \
C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176659529478*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\
\\\", TagBox[\\((2, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \
\[Equal] \\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\
\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \\(\\({C1, \
C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176659561234*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\
\\\", TagBox[\\((2, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\
\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \
\[Equal] \\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\
\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \\(\\({C1, \
C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176659567671*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441766595951853`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "derlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The length of the derivative operator \
\[NoBreak]\\!\\(Derivative[\\(\\(1, 0, 0\\)\\)]\\)\[NoBreak] in \[NoBreak]\\!\
\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\[NoBreak] is \
not the same as the number of arguments. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/derlen\\\", ButtonNote -> \
\\\"NDSolve::derlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176659628674*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "derlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The length of the derivative operator \
\[NoBreak]\\!\\(Derivative[\\(\\(1, 0, 0\\)\\)]\\)\[NoBreak] in \[NoBreak]\\!\
\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\[NoBreak] is \
not the same as the number of arguments. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/derlen\\\", ButtonNote -> \
\\\"NDSolve::derlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417665963444*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: derlen\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176659661845*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441766597074203`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441766597765083`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "derlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The length of the derivative operator \
\[NoBreak]\\!\\(Derivative[\\(\\(1, 0, 0\\)\\)]\\)\[NoBreak] in \[NoBreak]\\!\
\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\[NoBreak] is \
not the same as the number of arguments. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/derlen\\\", ButtonNote -> \
\\\"NDSolve::derlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441766875398817`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \
\[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \
\\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \\(\\({C1, \
C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176687568221*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \
\[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \
\\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \\(\\({C1, \
C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176687588767*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C1[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((0, 1)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \
\[Equal] \\(\\(\\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \
\\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\
\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\
\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\\), \\(\\({C1, \
C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441766876153393`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441766876422462`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "derlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The length of the derivative operator \
\[NoBreak]\\!\\(Derivative[\\(\\(1, 0, 0\\)\\)]\\)\[NoBreak] in \[NoBreak]\\!\
\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\[NoBreak] is \
not the same as the number of arguments. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/derlen\\\", ButtonNote -> \
\\\"NDSolve::derlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176687661374*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "derlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The length of the derivative operator \
\[NoBreak]\\!\\(Derivative[\\(\\(1, 0, 0\\)\\)]\\)\[NoBreak] in \[NoBreak]\\!\
\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\[NoBreak] is \
not the same as the number of arguments. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/derlen\\\", ButtonNote -> \
\\\"NDSolve::derlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441766877016*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: derlen\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176687707165*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176687770896*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176687864624*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dvlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function \
\[NoBreak]\\!\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\
\[NoBreak] does not have the same number of arguments as independent \
variables (\[NoBreak]\\!\\(2\\)\[NoBreak]). \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dvlen\\\", ButtonNote -> \
\\\"NDSolve::dvlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176719699192*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\
\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767197329597`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\
\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176719754178*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), 0, 0\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] 1\\)\\)}\\)\
\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, \
100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor \
a valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767197834587`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767197894707`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dvlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function \
\[NoBreak]\\!\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\
\[NoBreak] does not have the same number of arguments as independent \
variables (\[NoBreak]\\!\\(2\\)\[NoBreak]). \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dvlen\\\", ButtonNote -> \
\\\"NDSolve::dvlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176719817482*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "dvlen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function \
\[NoBreak]\\!\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, 0, 0\\)\\)]\\)\
\[NoBreak] does not have the same number of arguments as independent \
variables (\[NoBreak]\\!\\(2\\)\[NoBreak]). \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/dvlen\\\", ButtonNote -> \
\\\"NDSolve::dvlen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176719837504*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: dvlen\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176719865898*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176719911377*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176720001169*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767498632307`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\
\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] \
1\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\
\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767498978243`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\
\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] \
1\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\
\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767499196463`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \[Equal] 0\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\
\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C2[\\(\\(x, 0\\)\\)]\\)\\) \[Equal] \
1\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \\(\\(-1\\)\\), 1}\\)\\), \\(\
\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767499473257`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767499532022`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417674998153*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767500156603`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: bcedge\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176750020875*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176750067059*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176750131875*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176793779807*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417679381487*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417679383678*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176793866172*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767938726263`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417679389928*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176793930656*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: bcedge\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767939351892`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176793978709*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441767940445423`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441768896433897`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176889672138*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176889692945*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176889720838*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176889751975*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441768897571783`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176889792205*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: bcedge\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176889796846*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176889858571*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644176889966405*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177010339108*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441770103749*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177010395877*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177010424664*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177010431959*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441770104625053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177010491335*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: bcedge\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177010495812*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177010542292*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177010607842*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177084918532*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177084949767*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177084969838*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-1\\)\\), 1}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177084996973*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441770850025463`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177085031632*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "bcedge"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Boundary condition \
\[NoBreak]\\!\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\[NoBreak] is \
not specified on a single edge of the boundary of the computational domain. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NDSolve/bcedge\\\", \
ButtonNote -> \\\"NDSolve::bcedge\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177085051197*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: bcedge\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417708507734*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441770851224546`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177085190364*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441771366384087`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177136702159*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(DSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
is neither a list of replacement rules nor a valid dispatch table, and so \
cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441772423819237`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(DSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
is neither a list of replacement rules nor a valid dispatch table, and so \
cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177242403754*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(DSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
is neither a list of replacement rules nor a valid dispatch table, and so \
cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177242439629*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177242472375*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({x, \\(\\(-10\\)\\), 10}\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/DSolve/dsvar\\\", ButtonNote -> \
\\\"DSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441772424768143`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({x, \\(\\(-10\\)\\), 10}\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/DSolve/dsvar\\\", ButtonNote -> \
\\\"DSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177242505516*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DSolve", "::", "dsvar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({x, \\(\\(-10\\)\\), 10}\\)\[NoBreak] \
cannot be used as a variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/DSolve/dsvar\\\", ButtonNote -> \
\\\"DSolve::dsvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441772425312567`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(DSolve :: \
dsvar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177242535635*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417724258211*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177242643931*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(DSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
t}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177268821426*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(DSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
t}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441772688580217`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\({\\(DSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\
\\*SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(100\\\\ \
\\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\
\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
t}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177268863838*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177268891252*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177268934204*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177269006769*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417746163059*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417746169674*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441774812029753`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177481264732*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \
\[NoBreak]\\!\\(\\(\\(C[\\(\\(\\(\\(2\\\\ x\\)\\), t\\)\\)]\\)\\) + \\(\\(2\\\
\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(2\\\\ x\\)\\), \
t\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177508911091*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(\\(\\(2\\\\ \
x\\)\\), t\\)\\)]\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
is neither a list of replacement rules nor a valid dispatch table, and so \
cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441775089310913`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \
\[NoBreak]\\!\\(\\(\\(C[\\(\\(\\(\\(2\\\\ x\\)\\), t\\)\\)]\\)\\) + \\(\\(2\\\
\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(2\\\\ x\\)\\), \
t\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177508985968*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(\\(\\(2\\\\ \
x\\)\\), t\\)\\)]\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
is neither a list of replacement rules nor a valid dispatch table, and so \
cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417750900569*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \
\[NoBreak]\\!\\(\\(\\(C[\\(\\(\\(\\(2\\\\ x\\)\\), t\\)\\)]\\)\\) + \\(\\(2\\\
\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(2\\\\ x\\)\\), \
t\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177509064189*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: femcnsd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441775090841513`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(\\(\\(2\\\\ \
x\\)\\), t\\)\\)]\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
is neither a list of replacement rules nor a valid dispatch table, and so \
cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177509116642*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417750912245*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177509226508*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177509365746*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \
\[NoBreak]\\!\\(\\(\\(C[\\(\\(\\(\\(2\\\\ x\\)\\), t\\)\\)]\\)\\) + \\(\\(2\\\
\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(2\\\\ x\\)\\), \
t\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177582245401*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(\\(\\(2\\\\ \
x\\)\\), t\\)\\)]\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
is neither a list of replacement rules nor a valid dispatch table, and so \
cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177582250228*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \
\[NoBreak]\\!\\(\\(\\(C[\\(\\(\\(\\(2\\\\ x\\)\\), t\\)\\)]\\)\\) + \\(\\(2\\\
\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(2\\\\ x\\)\\), \
t\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177582328516*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(\\(\\(2\\\\ \
x\\)\\), t\\)\\)]\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
is neither a list of replacement rules nor a valid dispatch table, and so \
cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177582333503*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \
\[NoBreak]\\!\\(\\(\\(C[\\(\\(\\(\\(2\\\\ x\\)\\), t\\)\\)]\\)\\) + \\(\\(2\\\
\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(2\\\\ x\\)\\), \
t\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177582397807*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: femcnsd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441775824180937`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(\\(\\(2\\\\ \
x\\)\\), t\\)\\)]\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 100}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
is neither a list of replacement rules nor a valid dispatch table, and so \
cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441775824490767`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177582455014*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177582560063*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177582702259*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \
\[NoBreak]\\!\\(\\(\\(C[\\(\\(\\(\\(2\\\\ x\\)\\), t\\)\\)]\\)\\) + \\(\\(2\\\
\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(2\\\\ x\\)\\), \
t\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441776080259247`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(\\(\\(2\\\\ \
x\\)\\), t\\)\\)]\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177608046015*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \
\[NoBreak]\\!\\(\\(\\(C[\\(\\(\\(\\(2\\\\ x\\)\\), t\\)\\)]\\)\\) + \\(\\(2\\\
\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(2\\\\ x\\)\\), \
t\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177608104966*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(\\(\\(2\\\\ \
x\\)\\), t\\)\\)]\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177608125*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \
\[NoBreak]\\!\\(\\(\\(C[\\(\\(\\(\\(2\\\\ x\\)\\), t\\)\\)]\\)\\) + \\(\\(2\\\
\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(2\\\\ x\\)\\), \
t\\)\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177608186132*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: femcnsd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177608206262*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(\\(\\(2\\\\ \
x\\)\\), t\\)\\)]\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(2\\\\ x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, \
0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177608233528*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177608262038*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441776083524923`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441776084882708`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\(\\(C[\\(\\(x, \
t\\)\\)]\\)\\) + \\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\
\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441776625305367`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(x, t\\)\\)]\
\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, \
C2}\\)\\), \\(\\({x, \\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441776625598917`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\(\\(C[\\(\\(x, \
t\\)\\)]\\)\\) + \\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\
\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177662612492*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(x, t\\)\\)]\
\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, \
C2}\\)\\), \\(\\({x, \\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441776626389008`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\(\\(C[\\(\\(x, \
t\\)\\)]\\)\\) + \\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\
\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177662694962*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: femcnsd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177662715231*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(100\\\\ \\(\\(C2[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(x, t\\)\\)]\
\\)\\) + \\(\\(100\\\\ \[ExponentialE]\\\\ \\(\\(C1[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\) + \\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((2, 0)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, \
C2}\\)\\), \\(\\({x, \\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177662742844*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177662764262*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441776628600283`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177662999977*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\(\\(C[\\(\\(x, \
t\\)\\)]\\)\\) + \\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\
\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177791982143*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(x, t\\)\\)]\
\\)\\) + \\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\\(x\\\\ \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177792016191*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\(\\(C[\\(\\(x, \
t\\)\\)]\\)\\) + \\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\
\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177792064432*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(x, t\\)\\)]\
\\)\\) + \\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\\(x\\\\ \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177792084277*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\(\\(C[\\(\\(x, \
t\\)\\)]\\)\\) + \\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\
\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441777921430397`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: femcnsd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441777921630373`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(x, t\\)\\)]\
\\)\\) + \\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\\(x\\\\ \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64417779219592*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177792201776*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441777922989407`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644177792425901*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\(\\(C[\\(\\(x, \
t\\)\\)]\\)\\) + \\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\
\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6441853123245287`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(x, t\\)\\)]\
\\)\\) + \\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\\(x\\\\ \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644185312376598*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\(\\(C[\\(\\(x, \
t\\)\\)]\\)\\) + \\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\
\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64418531246937*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(x, t\\)\\)]\
\\)\\) + \\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\\(x\\\\ \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64418531251656*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "femcnsd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The PDE coefficient \[NoBreak]\\!\\(\\(\\(C[\\(\\(x, \
t\\)\\)]\\)\\) + \\(\\(x\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\
\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\
\\)]\\)\\)\\)\\)\\)\[NoBreak] does not evaluate to a numeric scalar. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NDSolve\\\", ButtonNote -> \
\\\"NDSolve::femcnsd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644185312614005*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: femcnsd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644185312673691*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(NDSolve[\\(\\(\\(\\({\\(\\(\\(\\(\\(\\(\\*\
SuperscriptBox[\\\"C1\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \
\\(\\(\\(\\(\\(\\(-100\\)\\)\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\
\\(100\\\\ \\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\)\\)\\)\\)\\), \
\\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((1, 0)\\), \
Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(10, t\\)\\)]\\)\\) \
\[Equal] 0\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", \
TagBox[\\((1, 0)\\), Derivative], Rule[MultilineFunction, None]]\\)\\)[\\(\\(\
\\(\\(-10\\)\\), t\\)\\)]\\)\\) \[Equal] 0\\)\\), \\(\\(\\(\\(C1[\\(\\(x, \
0\\)\\)]\\)\\) \[Equal] 1\\)\\), \\(\\(\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\
\", TagBox[\\((0, 1)\\), Derivative], Rule[MultilineFunction, \
None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\) \[Equal] \\(\\(\\(\\(C[\\(\\(x, t\\)\\)]\
\\)\\) + \\(\\(100\\\\ \\(\\(C1[\\(\\(x, t\\)\\)]\\)\\)\\)\\) - \\(\\(100\\\\ \
\\(\\(C2[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \\(\\(x\\\\ \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C\\\", TagBox[\\((1, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, t\\)\\)]\\)\\)\\)\\) + \
\\(\\(\\(\\(\\*SuperscriptBox[\\\"C2\\\", TagBox[\\((2, 0)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(x, \
t\\)\\)]\\)\\)\\)\\)\\)\\)}\\)\\), \\(\\({C1, C2}\\)\\), \\(\\({x, \
\\(\\(-10\\)\\), 10}\\)\\), \\(\\({t, 0, 1}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644185312735635*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ReplaceAll :: reps\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644185312806875*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644185312959269*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "plln"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Limiting value \[NoBreak]\\!\\(L1\\)\[NoBreak] in \
\[NoBreak]\\!\\({x, L1, L2}\\)\[NoBreak] is not a machine-sized real number. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/plln\\\", \
ButtonNote -> \\\"Plot::plln\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644185313205727*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bcSlope2L", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
     RowBox[{"L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{"gaussianPrime", "[", 
     RowBox[{"x02", ",", " ", "sigma2", ",", " ", "L1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope2R", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
     RowBox[{"L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{"gaussianPrime", "[", 
     RowBox[{"x02", ",", " ", "sigma2", ",", " ", "L2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope1L", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
     RowBox[{"L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{"gaussianPrime", "[", 
     RowBox[{"x01", ",", " ", "sigma1", ",", " ", "L1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope1R", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
     RowBox[{"L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{"gaussianPrime", "[", 
     RowBox[{"x01", ",", " ", "sigma1", ",", " ", "L2"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.641568552411139*^9, 3.641568552596552*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6416887204893084`*^9, 3.641688728009688*^9}}],

Cell[CellGroupData[{

Cell["\<\
In terms of sum and difference variables.  c1 = sum, c2 = diff (food - no \
food)\
\>", "Section",
 CellChangeTimes->{{3.6416887394513493`*^9, 3.6416887611204967`*^9}, {
  3.6416890246072474`*^9, 3.6416890411468153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu1", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1", " ", "=", " ", 
   RowBox[{"-", "50"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", " ", "=", " ", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x01", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma1", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x02", " ", "=", " ", 
   RowBox[{"-", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma2", " ", "=", " ", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", " ", "=", " ", "100"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gaussian", "[", 
     RowBox[{"mu_", ",", " ", "sigma_", ",", "x_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"1", " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"sigma", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", " ", "-", " ", "mu"}], ")"}], "^", "2"}]}], "  ", "/", 
       
       RowBox[{"(", 
        RowBox[{"2", " ", 
         RowBox[{"sigma", "^", "2"}]}], ")"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nestx0", " ", "=", " ", "x01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foodx0", " ", "=", " ", "x02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nestSigma", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foodSigma", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foodRate", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nestRate", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oldfood", " ", "=", " ", 
   RowBox[{"foodRate", " ", "*", " ", 
    RowBox[{"gaussian", "[", 
     RowBox[{"foodx0", ",", " ", "foodSigma", ",", " ", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"food", " ", "=", " ", 
   RowBox[{"foodRate", " ", "*", " ", 
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"24", "\[Pi]", 
              RowBox[{
               RowBox[{"(", " ", 
                RowBox[{"x", "-", "L1"}], ")"}], " ", "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", "L2"}], ")"}]}]}], "]"}]}], ")"}], "^", 
          "2"}], ",", 
         RowBox[{"x", "<", "0"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"x", "\[GreaterEqual]", "0"}]}], "}"}]}], "}"}], "]"}]}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nest", " ", "=", " ", 
    RowBox[{"nestRate", " ", "*", " ", 
     RowBox[{"gaussian", "[", 
      RowBox[{"nestx0", ",", " ", "nestSigma", ",", " ", "x"}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c1", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", "==", "  ", 
    RowBox[{"D", "[", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"mu1", "  ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"c1", "[", 
           RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}]}], " ", "+", " ", 
       RowBox[{"f", " ", 
        RowBox[{"c2", "[", 
         RowBox[{"x", ",", "t"}], "]"}], " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"c2", "[", 
           RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}]}]}], ",", "x"}], 
     "]"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ic1", " ", "=", " ", 
   RowBox[{
    RowBox[{"c1", "[", 
     RowBox[{"x", ",", "0"}], "]"}], " ", "\[Equal]", 
    RowBox[{
     RowBox[{"gaussian", "[", 
      RowBox[{"x01", ",", "sigma1", ",", "x"}], "]"}], " ", "+", " ", 
     RowBox[{"gaussian", "[", 
      RowBox[{"x02", ",", "sigma2", ",", "x"}], "]"}]}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc1L", " ", "=", " ", 
   RowBox[{
    RowBox[{"c1", "[", 
     RowBox[{"L1", ",", "t"}], "]"}], " ", "\[Equal]", 
    RowBox[{
     RowBox[{"gaussian", "[", 
      RowBox[{"x01", ",", "sigma1", ",", "L1"}], "]"}], " ", "+", " ", 
     RowBox[{"gaussian", "[", 
      RowBox[{"x02", ",", "sigma2", ",", "L1"}], "]"}]}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc1R", " ", "=", " ", 
   RowBox[{
    RowBox[{"c1", "[", 
     RowBox[{"L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"gaussian", "[", 
      RowBox[{"x01", ",", "sigma1", ",", "L2"}], "]"}], " ", "+", " ", 
     RowBox[{"gaussian", "[", 
      RowBox[{"x02", ",", "sigma2", ",", "L2"}], "]"}]}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope1L", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
     RowBox[{"L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bcSlope1R", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", 
        RowBox[{"1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
      RowBox[{"L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c2", "[", 
       RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", "\[Equal]", 
    "  ", 
    RowBox[{
     RowBox[{"D", "[", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"mu1", "  ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"c2", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}]}], " ", "+", 
        " ", 
        RowBox[{"f", " ", 
         RowBox[{"c1", "[", 
          RowBox[{"x", ",", "t"}], "]"}], " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"c2", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}]}]}], ",", "x"}],
       "]"}], "+", " ", 
     RowBox[{
      RowBox[{"c1", "[", 
       RowBox[{"x", ",", "t"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"nest", " ", "-", "food"}], ")"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"c2", "[", 
       RowBox[{"x", ",", "t"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"food", " ", "+", " ", "nest"}], ")"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ic2", " ", "=", " ", 
   RowBox[{
    RowBox[{"c2", "[", 
     RowBox[{"x", ",", "0"}], "]"}], " ", "==", 
    RowBox[{
     RowBox[{"gaussian", "[", 
      RowBox[{"x01", ",", "sigma1", ",", "x"}], "]"}], "-", " ", 
     RowBox[{"gaussian", "[", 
      RowBox[{"x02", ",", "sigma2", ",", "x"}], "]"}]}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc2L", " ", "=", " ", 
   RowBox[{
    RowBox[{"c2", "[", 
     RowBox[{"L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"gaussian", "[", 
      RowBox[{"x01", ",", "sigma1", ",", "L1"}], "]"}], " ", "-", " ", 
     RowBox[{"gaussian", "[", 
      RowBox[{"x02", ",", "sigma2", ",", "L1"}], "]"}]}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc2R", " ", "=", " ", 
   RowBox[{
    RowBox[{"c2", "[", 
     RowBox[{"L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"gaussian", "[", 
      RowBox[{"x01", ",", "sigma1", ",", "L2"}], "]"}], " ", "-", " ", 
     RowBox[{"gaussian", "[", 
      RowBox[{"x02", ",", "sigma2", ",", "L2"}], "]"}]}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope2L", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
     RowBox[{"L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bcSlope2R", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", 
        RowBox[{"1", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
      RowBox[{"L2", ",", "t"}], "]"}], " ", "\[Equal]", "0"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", " ", "=", " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eq1", ",", " ", "ic1", ",", " ", "bcSlope1L", ",", " ", "bcSlope1R", 
        ",", " ", "eq2", ",", " ", "ic2", ",", " ", "bcSlope2L", ",", "  ", 
        "bcSlope2R"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c1", ",", " ", "c2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "L1", ",", " ", "L2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"c1", "[", 
          RowBox[{"x", ",", "t"}], "]"}], "/.", " ", "sol"}], "]"}], ",", " ", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"c2", "[", 
          RowBox[{"x", ",", "t"}], "]"}], "/.", " ", "sol"}], "]"}], ",", " ",
        "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "L1", ",", " ", "L2"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQ/Uw/J/yH4mvHuunP00B05NLGbBC9f6VZKYiuzphe
C6L1BIq6QfSij65TQbRZi8d0EB2y5+0CEK0v+glM53xTuA2it3OHPATRjnPq
XoLoi/unvAHRnxJrPoDoqELPTyDaZ9XsrYpKrx2XT5beBqI3MfHsA9HbrJSO
gOgtbFInQfQF/n1gmmPVo7Mguv/Ki3Mguq0+7DOI/rfqwncQveOZxn8QXZbs
yK4EpM8EdSiD6HPn54DpO9dXaoDozTXPwPT+FQX6ILrGWtQARO/aedMKRL/Z
6moLouuMy11BdFJJkxuIFktjCQLRdp0pYLrwqU0iiK5irAHTO6WKMkB0Q9Fi
MG2ucS0fRP/o4ioA0QAtCa6+
  "]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 1000}}, Typeset`size$$ = {
    360., {109., 114.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$14973$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$14973$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         Evaluate[
          ReplaceAll[
           $CellContext`c1[$CellContext`x, $CellContext`t$$], \
$CellContext`sol]], 
         Evaluate[
          ReplaceAll[
           $CellContext`c2[$CellContext`x, $CellContext`t$$], \
$CellContext`sol]], 0}, {$CellContext`x, $CellContext`L1, $CellContext`L2}, 
        PlotRange -> All], "Specifications" :> {{$CellContext`t$$, 0, 1000}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {153., 158.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.641774645560542*^9, 3.6417747662471123`*^9, 
  3.641774868678402*^9, 3.6417749849652653`*^9, 3.642158273616797*^9, 
  3.642350677421496*^9, 3.642351325533136*^9, 3.6423520369199657`*^9, 
  3.642352394798829*^9, 3.642361093333941*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
2 dimensional.  Better version in terms of density and order parameter \
further down.\
\>", "Section",
 CellChangeTimes->{{3.641576527611236*^9, 3.6415765312010593`*^9}, {
  3.642125038046928*^9, 3.642125056035715*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu1", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu2", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1", " ", "=", " ", 
   RowBox[{"-", "50"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x01", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y01", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma1", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x02", " ", "=", " ", 
   RowBox[{"-", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y02", " ", "=", " ", 
   RowBox[{"-", "0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma2", " ", "=", " ", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f2", " ", "=", " ", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha1", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alpha2", " ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gaussian", "[", 
     RowBox[{
     "mux_", ",", "muy_", ",", " ", "sigma_", ",", "x_", ",", " ", "y_"}], 
     "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"1", " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"sigma", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}]}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", " ", "-", " ", "mux"}], ")"}], "^", "2"}], "  ", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "-", "muy"}], ")"}], "^", "2"}]}], ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", 
         RowBox[{"sigma", "^", "2"}]}], ")"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nestx0", " ", "=", " ", "x01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foodx0", " ", "=", " ", "x02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nesty0", " ", "=", " ", "y01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foody0", " ", "=", " ", "y02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nestSigma", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foodSigma", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"foodRate", " ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nestRate", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"food", " ", "=", " ", 
   RowBox[{"foodRate", " ", "*", " ", 
    RowBox[{"gaussian", "[", 
     RowBox[{
     "foodx0", ",", "foody0", ",", " ", "foodSigma", ",", " ", "x", ",", " ", 
      "y"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nest", " ", "=", " ", 
    RowBox[{"nestRate", " ", "*", " ", 
     RowBox[{"gaussian", "[", 
      RowBox[{
      "nestx0", ",", "nesty0", ",", " ", "nestSigma", ",", " ", "x", ",", " ",
        "y"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c1", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", "==",
     " ", 
    RowBox[{
     RowBox[{"mu1", " ", "*", " ", 
      RowBox[{"D", "[", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"c1", "[", 
            RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "x"}], "]"}], " ", 
         "\[IndentingNewLine]", "-", " ", 
         RowBox[{"f1", " ", 
          RowBox[{"c1", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c2", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", "-", 
             RowBox[{"alpha1", " ", 
              RowBox[{"c1", "[", 
               RowBox[{"x", ",", "y", ",", " ", "t"}], "]"}]}]}], ",", "x"}], 
           "]"}]}]}], "  ", ",", " ", "x"}], "]"}]}], "+", " ", 
     RowBox[{"mu1", " ", "*", " ", 
      RowBox[{"D", "[", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"c1", "[", 
            RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "y"}], "]"}], " ", 
         "\[IndentingNewLine]", "-", " ", 
         RowBox[{"f1", " ", 
          RowBox[{"c1", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c2", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", "-", 
             RowBox[{"alpha1", " ", 
              RowBox[{"c1", "[", 
               RowBox[{"x", ",", "y", ",", " ", "t"}], "]"}]}]}], ",", "y"}], 
           "]"}]}]}], "  ", ",", " ", "y"}], "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"c2", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], "nest"}], " ", "-", 
     RowBox[{
      RowBox[{"c1", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], "food"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ic1", " ", "=", " ", 
   RowBox[{
    RowBox[{"c1", "[", 
     RowBox[{"x", ",", "y", ",", "0"}], "]"}], " ", "==", " ", 
    RowBox[{"gaussian", "[", 
     RowBox[{"x01", ",", "y01", ",", "sigma1", ",", "x", ",", "y"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope1xL", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
     RowBox[{"L1", ",", "y", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope1xR", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
     RowBox[{"L2", ",", "y", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope1yL", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"0", ",", "1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
     RowBox[{"x", ",", "L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bcSlope1yR", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", 
        RowBox[{"0", ",", "1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
      RowBox[{"x", ",", "L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
     "0"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"c2", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", "==",
     " ", 
    RowBox[{
     RowBox[{"mu2", " ", "*", " ", 
      RowBox[{"D", "[", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"c2", "[", 
            RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "x"}], "]"}], " ", 
         "\[IndentingNewLine]", "-", " ", 
         RowBox[{"f2", " ", 
          RowBox[{"c2", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c1", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", "-", 
             RowBox[{"alpha1", " ", 
              RowBox[{"c2", "[", 
               RowBox[{"x", ",", "y", ",", " ", "t"}], "]"}]}]}], ",", "x"}], 
           "]"}]}]}], "  ", ",", " ", "x"}], "]"}]}], "+", " ", 
     RowBox[{"mu2", " ", "*", " ", 
      RowBox[{"D", "[", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"c2", "[", 
            RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "y"}], "]"}], " ", 
         "\[IndentingNewLine]", "-", " ", 
         RowBox[{"f2", " ", 
          RowBox[{"c2", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c1", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", "-", 
             RowBox[{"alpha1", " ", 
              RowBox[{"c2", "[", 
               RowBox[{"x", ",", "y", ",", " ", "t"}], "]"}]}]}], ",", "y"}], 
           "]"}]}]}], "  ", ",", " ", "y"}], "]"}]}], "-", " ", 
     RowBox[{
      RowBox[{"c2", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], "nest"}], " ", "+", 
     RowBox[{
      RowBox[{"c1", "[", 
       RowBox[{"x", ",", "y", ",", "t"}], "]"}], "food"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ic2", " ", "=", " ", 
   RowBox[{
    RowBox[{"c2", "[", 
     RowBox[{"x", ",", "y", ",", "0"}], "]"}], " ", "==", " ", 
    RowBox[{"gaussian", "[", 
     RowBox[{"x02", ",", "y02", ",", "sigma2", ",", "x", ",", "y"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope2xL", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
     RowBox[{"L1", ",", "y", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope2xR", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
     RowBox[{"L2", ",", "y", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bcSlope2yL", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"0", ",", "1", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
     RowBox[{"x", ",", "L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", "0"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bcSlope2yR", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", 
        RowBox[{"0", ",", "1", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
      RowBox[{"x", ",", "L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
     "0"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "eq1", ",", " ", "ic1", ",", " ", "bcSlope1xL", ",", " ", "bcSlope1xR", 
       ",", "bcSlope1yL", ",", " ", "bcSlope1yR", ",", " ", "eq2", ",", " ", 
       "ic2", ",", " ", "bcSlope2xL", ",", "  ", "bcSlope2xR", ",", " ", 
       "bcSlope2yL", ",", " ", "bcSlope2yR"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c1", ",", " ", "c2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "L1", ",", " ", "L2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "L1", ",", "L2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", " ", "sol"}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "L1", ",", " ", "L2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "L1", ",", "L2"}], "}"}], ",", " ", 
     RowBox[{"Mesh", "\[Rule]", "50"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"c2", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", " ", "sol"}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "L1", ",", " ", "L2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "L1", ",", "L2"}], "}"}], ",", " ", 
     RowBox[{"Mesh", "\[Rule]", "50"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.641576536556038*^9, 3.6415767994447308`*^9}, {
  3.641576879542433*^9, 3.641577004711444*^9}, {3.6415770439296217`*^9, 
  3.641577358844141*^9}, {3.6415774017000217`*^9, 3.64157743747014*^9}, {
  3.641577519386553*^9, 3.641577520038683*^9}, {3.6415776082459307`*^9, 
  3.641577614323743*^9}, {3.641577738797328*^9, 3.6415777528999853`*^9}, {
  3.64157783455101*^9, 3.641577841451433*^9}, {3.6415780692051*^9, 
  3.641578123873468*^9}, {3.641578179399199*^9, 3.641578232047591*^9}, {
  3.641578451254521*^9, 3.641578462723296*^9}, {3.641578726140337*^9, 
  3.64157875699374*^9}, {3.641578848864983*^9, 3.641578848964034*^9}, {
  3.642125188977262*^9, 3.642125192364045*^9}, {3.642125335858724*^9, 
  3.6421253513635263`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "mxsst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Using maximum number of grid points \[NoBreak]\\!\\(100\\)\
\[NoBreak] allowed by the MaxPoints or MinStepSize options for independent \
variable \[NoBreak]\\!\\(x\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/mxsst\\\", ButtonNote -> \
\\\"NDSolve::mxsst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.642125352885399*^9, 3.642158273845942*^9, 
  3.642350677687964*^9, 3.642351325855568*^9, 3.64235203728642*^9, 
  3.6423523951947412`*^9, 3.642361093804347*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "mxsst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Using maximum number of grid points \[NoBreak]\\!\\(100\\)\
\[NoBreak] allowed by the MaxPoints or MinStepSize options for independent \
variable \[NoBreak]\\!\\(y\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/mxsst\\\", ButtonNote -> \
\\\"NDSolve::mxsst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.642125352885399*^9, 3.642158273845942*^9, 
  3.642350677687964*^9, 3.642351325855568*^9, 3.64235203728642*^9, 
  3.6423523951947412`*^9, 3.6423610939455633`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "mxsst"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Using maximum number of grid points \[NoBreak]\\!\\(100\\)\
\[NoBreak] allowed by the MaxPoints or MinStepSize options for independent \
variable \[NoBreak]\\!\\(x\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/mxsst\\\", ButtonNote -> \
\\\"NDSolve::mxsst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.642125352885399*^9, 3.642158273845942*^9, 
  3.642350677687964*^9, 3.642351325855568*^9, 3.64235203728642*^9, 
  3.6423523951947412`*^9, 3.642361094168345*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve \
:: mxsst\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.642125352885399*^9, 3.642158273845942*^9, 
  3.642350677687964*^9, 3.642351325855568*^9, 3.64235203728642*^9, 
  3.6423523951947412`*^9, 3.642361094208199*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 1}}, Typeset`size$$ = {360., {130., 134.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$15634$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$15634$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        Evaluate[
         ReplaceAll[
          $CellContext`c1[$CellContext`x, $CellContext`y, $CellContext`t$$], \
$CellContext`sol]], {$CellContext`x, $CellContext`L1, $CellContext`L2}, \
{$CellContext`y, $CellContext`L1, $CellContext`L2}, Mesh -> 50, PlotRange -> 
        All], "Specifications" :> {{$CellContext`t$$, 0, 1}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{405., {174., 179.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.642125353859043*^9, 3.6421582748117123`*^9, 
  3.6423506787784157`*^9, 3.642351327123971*^9, 3.6423520385553293`*^9, 
  3.6423523962605124`*^9, 3.642361094917976*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 1}}, Typeset`size$$ = {360., {127., 132.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$15659$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$15659$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        Evaluate[
         ReplaceAll[
          $CellContext`c2[$CellContext`x, $CellContext`y, $CellContext`t$$], \
$CellContext`sol]], {$CellContext`x, $CellContext`L1, $CellContext`L2}, \
{$CellContext`y, $CellContext`L1, $CellContext`L2}, Mesh -> 50], 
      "Specifications" :> {{$CellContext`t$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {171., 176.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.642125353859043*^9, 3.6421582748117123`*^9, 
  3.6423506787784157`*^9, 3.642351327123971*^9, 3.6423520385553293`*^9, 
  3.6423523962605124`*^9, 3.642361095066608*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2 dim in terms of sum and diff", "Section",
 CellChangeTimes->{{3.6417695736262913`*^9, 3.641769584136958*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mu1", " ", "=", " ", ".2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L1", " ", "=", " ", 
     RowBox[{"-", "90"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L2", " ", "=", " ", "90"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", " ", "=", " ", "800"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x01", " ", "=", " ", "25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y01", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigma1", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x02", " ", "=", " ", 
     RowBox[{"-", "25"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y02", " ", "=", " ", 
     RowBox[{"-", "10"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigma2", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gaussian", "[", 
      RowBox[{
      "mux_", ",", "muy_", ",", " ", "sigma_", ",", "x_", ",", " ", "y_"}], 
      "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"1", " ", "/", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"sigma", " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"2", " ", "\[Pi]"}], "]"}]}], ")"}], "^", "2"}]}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", " ", "-", " ", "mux"}], ")"}], "^", "2"}], "  ", 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"y", "-", "muy"}], ")"}], "^", "2"}]}], ")"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"sigma", "^", "2"}]}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nestx0", " ", "=", " ", "x02"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nesty0", " ", "=", " ", "y02"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"foodx0", " ", "=", " ", "x01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"foody0", " ", "=", " ", "y01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nestSigma", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"foodSigma", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"foodRate", " ", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nestRate", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"food", " ", "=", " ", 
     RowBox[{"foodRate", " ", "*", " ", 
      RowBox[{"gaussian", "[", 
       RowBox[{
       "foodx0", ",", "foody0", ",", " ", "foodSigma", ",", " ", "x", ",", 
        "y"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nest", " ", "=", " ", 
     RowBox[{"nestRate", " ", "*", " ", 
      RowBox[{"gaussian", "[", 
       RowBox[{
       "nestx0", ",", " ", "nesty0", ",", " ", "nestSigma", ",", " ", "x", 
        ",", "y"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq1", " ", "=", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"c1", "[", 
         RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", "==",
       "    ", 
      RowBox[{
       RowBox[{"mu1", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"c1", "[", 
             RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"c1", "[", 
             RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}], " ", "+", 
       " ", 
       RowBox[{"f", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"c2", "[", 
            RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"c2", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "x"}], "]"}]}], 
          ",", "x"}], "]"}]}], "+", " ", 
       RowBox[{"f", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"c2", "[", 
            RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"c2", "[", 
              RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "y"}], "]"}]}], 
          ",", "y"}], "]"}]}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ic1", " ", "=", " ", 
     RowBox[{
      RowBox[{"c1", "[", 
       RowBox[{"x", ",", "y", ",", "0"}], "]"}], " ", "\[Equal]", 
      RowBox[{
       RowBox[{"gaussian", "[", 
        RowBox[{"x01", ",", "y01", ",", "sigma1", ",", "x", ",", "y"}], "]"}],
        " ", "+", " ", 
       RowBox[{"0", "*", 
        RowBox[{"gaussian", "[", 
         RowBox[{"x02", ",", "y02", ",", "sigma2", ",", "x", ",", "y"}], 
         "]"}]}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcSlope1xL", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
       RowBox[{"L1", ",", "y", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcSlope1xR", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
       RowBox[{"L2", ",", "y", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcSlope1yL", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
       RowBox[{"x", ",", "L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcSlope1yR", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
       RowBox[{"x", ",", "L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bc", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
       RowBox[{"L1", ",", "y", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bc2", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
       RowBox[{"L2", ",", "y", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bc3", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
       RowBox[{"x", ",", "L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bc4", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "1", ",", "0"}], "]"}], "[", "c1", "]"}], "[", 
       RowBox[{"x", ",", "L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eq2", " ", "=", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"c2", "[", 
         RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "t"}], "]"}], " ", 
      "\[Equal]", "  ", 
      RowBox[{
       RowBox[{"mu1", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"c2", "[", 
             RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"c2", "[", 
             RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", "2"}], "}"}]}], "]"}]}], ")"}]}], " ", "+", 
       " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"f", " ", 
          RowBox[{"c1", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"c2", "[", 
             RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "x"}], "]"}]}], 
         ",", "x"}], "]"}], "+", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"f", " ", 
          RowBox[{"c1", "[", 
           RowBox[{"x", ",", "y", ",", "t"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"c2", "[", 
             RowBox[{"x", ",", "y", ",", "t"}], "]"}], ",", "y"}], "]"}]}], 
         ",", "y"}], "]"}], "+", " ", 
       RowBox[{
        RowBox[{"c1", "[", 
         RowBox[{"x", ",", "y", ",", "t"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"nest", " ", "-", "food"}], ")"}]}], " ", "-", " ", 
       RowBox[{
        RowBox[{"c2", "[", 
         RowBox[{"x", ",", "y", ",", "t"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"food", " ", "+", " ", "nest"}], ")"}]}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ic2", " ", "=", " ", 
     RowBox[{
      RowBox[{"c2", "[", 
       RowBox[{"x", ",", "y", ",", "0"}], "]"}], " ", "==", 
      RowBox[{
       RowBox[{"gaussian", "[", 
        RowBox[{"x01", ",", "y01", ",", "sigma1", ",", "x", ",", "y"}], "]"}],
        "-", " ", 
       RowBox[{"gaussian", "[", 
        RowBox[{"x02", ",", "y02", ",", "sigma2", ",", "x", ",", "y"}], 
        "]"}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcSlope2xL", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
       RowBox[{"L1", ",", "y", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcSlope2xR", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
       RowBox[{"L2", ",", "y", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcSlope2yL", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
       RowBox[{"x", ",", "L1", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bcSlope2yR", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Derivative", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], "[", "c2", "]"}], "[", 
       RowBox[{"x", ",", "L2", ",", "t"}], "]"}], " ", "\[Equal]", " ", 
      "0"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sol", " ", "=", " ", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "eq1", ",", " ", "ic1", ",", " ", "bcSlope1xL", ",", " ", 
         "bcSlope1xR", ",", "bcSlope1yL", ",", " ", "bcSlope1yR", ",", "eq2", 
         ",", " ", "ic2", ",", " ", "bcSlope2xL", ",", "  ", "bcSlope2xR", 
         ",", " ", "bcSlope2yL", ",", " ", "bcSlope2yR"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "c2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "L1", ",", " ", "L2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "L1", ",", "L2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ContourPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"c1", "[", 
          RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", " ", "sol"}], "]"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "L1", ",", " ", "L2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "L1", ",", "L2"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
       RowBox[{"Mesh", "\[Rule]", "50"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ContourPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"c2", "[", 
          RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", " ", "sol"}], "]"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "L1", ",", " ", "L2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "L1", ",", "L2"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "50"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.641769532157453*^9, 3.6417695334478397`*^9}, {
   3.641769625441146*^9, 3.6417696824657784`*^9}, {3.641769767916718*^9, 
   3.6417698121075*^9}, {3.6417698656600246`*^9, 3.641769931353323*^9}, {
   3.641769981398613*^9, 3.641770049756042*^9}, {3.641770139765946*^9, 
   3.641770174368881*^9}, {3.641770212144815*^9, 3.641770212399279*^9}, {
   3.6417703049286757`*^9, 3.641770321204485*^9}, {3.641770363369282*^9, 
   3.641770438519226*^9}, {3.641770685866678*^9, 3.6417707320515223`*^9}, {
   3.641770899284636*^9, 3.6417709019407253`*^9}, {3.6417710231903152`*^9, 
   3.6417710404288597`*^9}, {3.641771100574586*^9, 3.6417711425958443`*^9}, {
   3.641771183909487*^9, 3.641771201140761*^9}, {3.6417714417112503`*^9, 
   3.641771442661685*^9}, {3.641771546778405*^9, 3.64177162776787*^9}, {
   3.6417716590649967`*^9, 3.641771701269829*^9}, {3.641771752622501*^9, 
   3.641771754289785*^9}, {3.641771861463111*^9, 3.6417719258861523`*^9}, {
   3.641771960493661*^9, 3.6417719628437634`*^9}, {3.6417721555269003`*^9, 
   3.641772162849348*^9}, {3.641772239484236*^9, 3.641772256599399*^9}, {
   3.6417723146272793`*^9, 3.6417723212564983`*^9}, {3.641772440390448*^9, 
   3.6417724704079857`*^9}, {3.642124526325021*^9, 3.642124539754428*^9}, {
   3.642124591694791*^9, 3.642124637102273*^9}, {3.642124703080839*^9, 
   3.6421247833334723`*^9}, {3.642124817317321*^9, 3.642124836024809*^9}, 
   3.642124904855054*^9, {3.6421249884478083`*^9, 3.6421249893844852`*^9}, {
   3.64235084943258*^9, 3.642350852888298*^9}, {3.642351162011915*^9, 
   3.642351167489646*^9}, {3.6423520133375587`*^9, 3.6423520185118427`*^9}, {
   3.642352377683139*^9, 3.642352377841477*^9}, {3.642361079293479*^9, 
   3.64236107968357*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 353., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 800}}, Typeset`size$$ = {360., {176., 180.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$15795$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$15795$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ContourPlot[
        Evaluate[
         ReplaceAll[
          $CellContext`c1[$CellContext`x, $CellContext`y, $CellContext`t$$], \
$CellContext`sol]], {$CellContext`x, $CellContext`L1, $CellContext`L2}, \
{$CellContext`y, $CellContext`L1, $CellContext`L2}, PlotRange -> All, Mesh -> 
        50], "Specifications" :> {{$CellContext`t$$, 0, 800}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {220., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.641771202951823*^9, 3.641771628509375*^9, 3.641771674648533*^9, 
   3.641771710161261*^9, 3.641771768502315*^9, 3.641772102334057*^9, 
   3.641772259781755*^9, 3.641772323128099*^9, {3.641772446485889*^9, 
   3.64177247210273*^9}, 3.642124545966687*^9, {3.6421246039373302`*^9, 
   3.6421246381718884`*^9}, {3.642124707353655*^9, 3.6421247345220547`*^9}, {
   3.642124765486374*^9, 3.642124784664872*^9}, {3.6421248196719*^9, 
   3.642124838448183*^9}, 3.6421249062677317`*^9, 3.642124991734152*^9, 
   3.6421582771475058`*^9, 3.6423506821529217`*^9, 3.642351328091017*^9, 
   3.642352039474045*^9, 3.642352397512568*^9, 3.642361095826837*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 800., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 800}}, Typeset`size$$ = {360., {176., 180.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$15819$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$15819$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ContourPlot[
        Evaluate[
         ReplaceAll[
          $CellContext`c2[$CellContext`x, $CellContext`y, $CellContext`t$$], \
$CellContext`sol]], {$CellContext`x, $CellContext`L1, $CellContext`L2}, \
{$CellContext`y, $CellContext`L1, $CellContext`L2}, PlotRange -> All, Mesh -> 
        50], "Specifications" :> {{$CellContext`t$$, 0, 800}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {220., 225.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.641771202951823*^9, 3.641771628509375*^9, 3.641771674648533*^9, 
   3.641771710161261*^9, 3.641771768502315*^9, 3.641772102334057*^9, 
   3.641772259781755*^9, 3.641772323128099*^9, {3.641772446485889*^9, 
   3.64177247210273*^9}, 3.642124545966687*^9, {3.6421246039373302`*^9, 
   3.6421246381718884`*^9}, {3.642124707353655*^9, 3.6421247345220547`*^9}, {
   3.642124765486374*^9, 3.642124784664872*^9}, {3.6421248196719*^9, 
   3.642124838448183*^9}, 3.6421249062677317`*^9, 3.642124991734152*^9, 
   3.6421582771475058`*^9, 3.6423506821529217`*^9, 3.642351328091017*^9, 
   3.642352039474045*^9, 3.642352397512568*^9, 3.642361095905283*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", " ", "sol"}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "L1", ",", " ", "L2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "L1", ",", "L2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"Mesh", "\[Rule]", "50"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"c2", "[", 
        RowBox[{"x", ",", "y", ",", "t"}], "]"}], "/.", " ", "sol"}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "L1", ",", " ", "L2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "L1", ",", "L2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "50"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.641772353369163*^9, 3.641772429148307*^9}, {
  3.642124947163375*^9, 3.642124959794035*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 800., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 800}}, Typeset`size$$ = {338., {154., 158.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$15871$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$15871$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        Evaluate[
         ReplaceAll[
          $CellContext`c1[$CellContext`x, $CellContext`y, $CellContext`t$$], \
$CellContext`sol]], {$CellContext`x, $CellContext`L1, $CellContext`L2}, \
{$CellContext`y, $CellContext`L1, $CellContext`L2}, PlotRange -> All, Mesh -> 
        50], "Specifications" :> {{$CellContext`t$$, 0, 800}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{383., {198., 203.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.641772373263434*^9, 3.641772452811701*^9}, 
   3.6421249642247477`*^9, 3.642158277424012*^9, 3.6423506825051613`*^9, 
   3.642351328649135*^9, 3.6423520397169867`*^9, 3.6423523981309357`*^9, 
   3.642361096038105*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 800., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 800}}, Typeset`size$$ = {360., {131., 135.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$15895$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$15895$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        Evaluate[
         ReplaceAll[
          $CellContext`c2[$CellContext`x, $CellContext`y, $CellContext`t$$], \
$CellContext`sol]], {$CellContext`x, $CellContext`L1, $CellContext`L2}, \
{$CellContext`y, $CellContext`L1, $CellContext`L2}, PlotRange -> All, Mesh -> 
        50], "Specifications" :> {{$CellContext`t$$, 0, 800}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {175., 180.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.641772373263434*^9, 3.641772452811701*^9}, 
   3.6421249642247477`*^9, 3.642158277424012*^9, 3.6423506825051613`*^9, 
   3.642351328649135*^9, 3.6423520397169867`*^9, 3.6423523981309357`*^9, 
   3.642361096206526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"foodRate", " ", "*", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", " ", "-", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"12", " ", "\[Pi]", 
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{"x", "-", "L1"}], ")"}], " ", "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "L2"}], ")"}]}]}], "]"}]}], ")"}], "^", "2"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "L1", ",", "L2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641774026459004*^9, 3.641774043572977*^9}, {
  3.641774387231078*^9, 3.641774391678878*^9}, {3.641774583166192*^9, 
  3.641774605565711*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
DaEXNmludU+M0ccLUrxaF0YQ9zOnDx8rbRDXkRDLCPUxRKzalcR+oCIPw+7Q
zuVxxEtKCHffeQQVyqp+kCqYRCVNUpYTTMcRM9ed2UsXp5CTAWd1/g0v5Pxn
WLxOYwZFcG1ZB2EflD2g78y/OovIl/kW4gPOo2B3i7q8njl0xvBXjRzvJSTd
6T/cWzKPeC5N6zFeuopaLFI36RIX0AhV27izKwRdrvgqIH9lEWnZvOeg+NxA
+1U31KnOS4hjVf7ay5u3UGOatN1VvWW0b7/5xGWFKHRRwPH0S6EVlFQu+mWt
8D7aGxV6s3F9BdEEpjabZcah2m1vny/3rqLc/25MZP95iPwu9JQJl62hPQy3
UG/GEyQwwdhl9PQ3Ipr/4yqBZ6jSWW3pzNU/6IOVhLma2HN0+qvrrvgjf1Hb
jSx7gZRU5LvzsH2l7TrKy/bMNk1MRxeMqQ/niA0kB0pPrUdfo8AQmx5hzX9I
3fI5j2ZYNrpWarbXQmYTlVQxq8Xrv0Of/qYol7LR4DXgTdD1eo8M+Z+1UiJo
sMlpzzfln/ORqcPj3cGXt+HoVRdHnz0lqN4v/gPv8tY9R1M3bryvHFneiz2c
dXY73ndX+1J6DqCmzOgNYnw73mWXFlzm+wnZ1d991n2MFk9qsUy5Uz5v3V+R
Bn49tHi8/5aL6IFq5EgfMcRIpcNe0azngoJrkRMOlVQ3pcd3urfVUU0aUe+R
oLovH+mx4OHr8mtjzcjl8pVTbroM+MXKu9GqQ9/Q8YKLb+8pMOJDQn3/Nr3a
0GjreTuJV4z41O5SaU7uDuQ177tYuo8JezCtHe3//h2dljulOcm9Az+4fb6Q
JqsHzZh5dQVH7cCf9k3FrVf0Ib8THpd3MzHjtOrGJ4yzP9HF50crDP8yYwuq
43k7yiBaq3A+1vPfTuzin3rXJ34IBfYdoj03sxMrGktu4slhFMTnYPJsgAX3
nePZ8erTGNquYTehfpgVPxd+18JhOoHC7K1vN7Sx4jNV9pLff0yiiCjT5t81
bPj17Cj9bvIMYs408os22IUder9G5DDOobt1ZC7Jkl14RKm0vGV1DpmFJsnK
HGDHf241Ug8tLyBmjqdXlmPZ8U1//8x9tEuo4dmTRvjKjje/6jMqCi4j67JH
PgfMObDw9O+WLu9VRFmLeR+mz4kzpMUv3727jrhu3qezDeTET9kPLzxb2EBt
PNFUwUJOrO1YNOF+fBM5qt5dfafEhVMMFKapatvw4bM3dX+KcWOj6Etjutfp
sNDGjTuvXblxA9UkvNCTHv+4HdZ34Sk3znvrSrywZcCuGSFBLLu33nWuYd+Z
tZiw+/DlSm1mXvw26XT/O0cW/M5z+vgymReLJ1uxUZ1Z8b9xF7p3l3nxcf/8
pvkTbPjRtIGR1DQvXnBvvpRoyo4bVxhreL/uxs3rl4pd4zmxQEDAiRYmPlxm
MRh+RZkLe/2dZIwy4MOsy4atWc1ceDtNkyn9ez58zkuY5QAPD9bYEVe/+IAf
y7Tsi+ip2o2v36Y/9baJH89JLKuXBfDhr6z+O08xCuDhy0eiCpX48SlOJ8vB
SwJ4bXmUfj5dACcLijR9PSyIc/4yN+qXCOMdCpnfsvYJ49qNpUghbVHsmCN8
7qSTML56dIfhvjeiOFXlHqd4rDDOzkjjitkjhkma5+wT6fbgWZt53Ywd+/E5
rNUeObYHv7u0e0p3ThyflXabeu8ogou7uv6r/iONv+vOzEYLieL4RJ0ZkzPK
eDIfe9joiuIPNc2Zm2XKeF0xtpvVSRS/2qmqzL1LBYvs16qKfCiKQ19yuOrl
qmAvltCEME4x/EOXhTL4VxWv9fIYXWLaj8vepinufKiBmQ94FWtI7sff7Z5u
z57UwELfihWXjfbjT3eXJUxJmhhXHRU4d30/zqg5OG08ookjsjJmT/3bjx9m
fWHJVNbGfNf0E44uiePoYxoWk2W6WGbt3q49XBJ4pbD5YDGrHtY7NxjWqyyB
H13rnWY/ooddPW/6HPKRwFec9mL1P3r4lfU3Q/tJCZx78te1OHkS1trrMWvc
L4k1fx5p3bJb2PxxoTv9piR+GDOQWHkYY2cu5u5KYSkM/BlJtVcxDmZ8+xlv
+R7q/lEvb8C4dnbtsU6HFE4U2vY7Dxng7pMWu34vSWGXX55ymi4GeGroaVgh
lzT+k+XWLnfFALN3kn3U7KTx870bq54FBvgg3DFUaJDGM0XN9rViZDx2/vjO
I5PS2GmHVKSIPhlflNRpuc0kgxkzZx16qWQcFzV2dMJQBrtLzFIubPllMXK5
BN9xGSyxU3vTastP5y7HTRuHyOBhcrZKSC4Zf3MmX04tk8HvGusqZ3rJ2JWd
n9zaI4PjhsQ5xbf8+FzlLNP2PzI4wTelLouOwGyyT+OPasjiuNV+2rdbfv7p
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
yv87rwz//7yy/wPwNeaK
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-90, 90}, {0., 39.99985084696118}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.641774033278059*^9, 3.641774064242362*^9}, {
   3.6417743883347063`*^9, 3.64177439199852*^9}, {3.641774584382496*^9, 
   3.6417746061333637`*^9}, 3.6421582777908993`*^9, 3.642350682868145*^9, 
   3.642351329174169*^9, 3.6423520402676697`*^9, 3.6423523987575817`*^9, 
   3.642361096616613*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1158, 812},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 14969, 384, 1019, "Input"],
Cell[15551, 408, 484, 11, 24, "Message"],
Cell[16038, 421, 2254, 49, 136, "Output"],
Cell[18295, 472, 529, 10, 24, "Message"],
Cell[18827, 484, 529, 10, 24, "Message"],
Cell[19359, 496, 529, 10, 24, "Message"],
Cell[19891, 508, 533, 11, 24, "Message"],
Cell[20427, 521, 501, 10, 24, "Message"],
Cell[20931, 533, 502, 10, 24, "Message"],
Cell[21436, 545, 529, 10, 24, "Message"],
Cell[21968, 557, 531, 10, 24, "Message"],
Cell[22502, 569, 529, 10, 24, "Message"],
Cell[23034, 581, 533, 11, 24, "Message"],
Cell[23570, 594, 502, 10, 24, "Message"],
Cell[24075, 606, 502, 10, 24, "Message"],
Cell[24580, 618, 528, 10, 24, "Message"],
Cell[25111, 630, 531, 10, 24, "Message"],
Cell[25645, 642, 529, 10, 24, "Message"],
Cell[26177, 654, 532, 11, 24, "Message"],
Cell[26712, 667, 504, 10, 24, "Message"],
Cell[27219, 679, 502, 10, 24, "Message"],
Cell[27724, 691, 529, 10, 24, "Message"],
Cell[28256, 703, 529, 10, 24, "Message"],
Cell[28788, 715, 529, 10, 24, "Message"],
Cell[29320, 727, 533, 11, 24, "Message"],
Cell[29856, 740, 504, 10, 24, "Message"],
Cell[30363, 752, 501, 10, 24, "Message"],
Cell[30867, 764, 529, 10, 24, "Message"],
Cell[31399, 776, 529, 10, 24, "Message"],
Cell[31931, 788, 529, 10, 24, "Message"],
Cell[32463, 800, 533, 11, 24, "Message"],
Cell[32999, 813, 502, 10, 24, "Message"],
Cell[33504, 825, 502, 10, 24, "Message"],
Cell[34009, 837, 528, 10, 24, "Message"],
Cell[34540, 849, 531, 10, 24, "Message"],
Cell[35074, 861, 529, 10, 24, "Message"],
Cell[35606, 873, 535, 11, 24, "Message"],
Cell[36144, 886, 502, 10, 24, "Message"],
Cell[36649, 898, 502, 10, 24, "Message"],
Cell[37154, 910, 2101, 33, 73, "Message"],
Cell[39258, 945, 2234, 35, 92, "Message"],
Cell[41495, 982, 2234, 35, 92, "Message"],
Cell[43732, 1019, 2234, 35, 92, "Message"],
Cell[45969, 1056, 533, 11, 24, "Message"],
Cell[46505, 1069, 2099, 33, 73, "Message"],
Cell[48607, 1104, 2099, 33, 73, "Message"],
Cell[50709, 1139, 530, 11, 24, "Message"],
Cell[51242, 1152, 501, 10, 24, "Message"],
Cell[51746, 1164, 501, 10, 24, "Message"],
Cell[52250, 1176, 429, 9, 24, "Message"],
Cell[52682, 1187, 2296, 36, 92, "Message"],
Cell[54981, 1225, 2296, 36, 92, "Message"],
Cell[57280, 1263, 2294, 36, 92, "Message"],
Cell[59577, 1301, 533, 11, 24, "Message"],
Cell[60113, 1314, 430, 9, 24, "Message"],
Cell[60546, 1325, 430, 9, 24, "Message"],
Cell[60979, 1336, 531, 11, 24, "Message"],
Cell[61513, 1349, 502, 10, 24, "Message"],
Cell[62018, 1361, 502, 10, 24, "Message"],
Cell[62523, 1373, 430, 9, 24, "Message"],
Cell[62956, 1384, 2296, 36, 92, "Message"],
Cell[65255, 1422, 2294, 36, 92, "Message"],
Cell[67552, 1460, 2294, 36, 92, "Message"],
Cell[69849, 1498, 532, 11, 24, "Message"],
Cell[70384, 1511, 432, 9, 24, "Message"],
Cell[70819, 1522, 429, 9, 24, "Message"],
Cell[71251, 1533, 531, 11, 24, "Message"],
Cell[71785, 1546, 504, 10, 24, "Message"],
Cell[72292, 1558, 502, 10, 24, "Message"],
Cell[72797, 1570, 430, 9, 24, "Message"],
Cell[73230, 1581, 2645, 41, 114, "Message"],
Cell[75878, 1624, 2647, 41, 114, "Message"],
Cell[78528, 1667, 2645, 41, 114, "Message"],
Cell[81176, 1710, 535, 11, 24, "Message"],
Cell[81714, 1723, 430, 9, 24, "Message"],
Cell[82147, 1734, 430, 9, 24, "Message"],
Cell[82580, 1745, 531, 11, 24, "Message"],
Cell[83114, 1758, 500, 10, 24, "Message"],
Cell[83617, 1770, 502, 10, 24, "Message"],
Cell[84122, 1782, 432, 9, 24, "Message"],
Cell[84557, 1793, 2645, 41, 114, "Message"],
Cell[87205, 1836, 2645, 41, 114, "Message"],
Cell[89853, 1879, 2647, 41, 114, "Message"],
Cell[92503, 1922, 533, 11, 24, "Message"],
Cell[93039, 1935, 432, 9, 24, "Message"],
Cell[93474, 1946, 432, 9, 24, "Message"],
Cell[93909, 1957, 531, 11, 24, "Message"],
Cell[94443, 1970, 502, 10, 24, "Message"],
Cell[94948, 1982, 504, 10, 24, "Message"],
Cell[95455, 1994, 531, 10, 24, "Message"],
Cell[95989, 2006, 529, 10, 24, "Message"],
Cell[96521, 2018, 528, 10, 24, "Message"],
Cell[97052, 2030, 535, 11, 24, "Message"],
Cell[97590, 2043, 504, 10, 24, "Message"],
Cell[98097, 2055, 502, 10, 24, "Message"],
Cell[98602, 2067, 430, 9, 24, "Message"],
Cell[99035, 2078, 2294, 36, 92, "Message"],
Cell[101332, 2116, 2294, 36, 92, "Message"],
Cell[103629, 2154, 2294, 36, 92, "Message"],
Cell[105926, 2192, 533, 11, 24, "Message"],
Cell[106462, 2205, 430, 9, 24, "Message"],
Cell[106895, 2216, 430, 9, 24, "Message"],
Cell[107328, 2227, 533, 11, 24, "Message"],
Cell[107864, 2240, 504, 10, 24, "Message"],
Cell[108371, 2252, 502, 10, 24, "Message"],
Cell[108876, 2264, 432, 9, 24, "Message"],
Cell[109311, 2275, 2293, 36, 92, "Message"],
Cell[111607, 2313, 2294, 36, 92, "Message"],
Cell[113904, 2351, 2293, 36, 92, "Message"],
Cell[116200, 2389, 535, 11, 24, "Message"],
Cell[116738, 2402, 430, 9, 24, "Message"],
Cell[117171, 2413, 432, 9, 24, "Message"],
Cell[117606, 2424, 530, 11, 24, "Message"],
Cell[118139, 2437, 502, 10, 24, "Message"],
Cell[118644, 2449, 502, 10, 24, "Message"],
Cell[119149, 2461, 432, 9, 24, "Message"],
Cell[119584, 2472, 2294, 36, 92, "Message"],
Cell[121881, 2510, 2294, 36, 92, "Message"],
Cell[124178, 2548, 2294, 36, 92, "Message"],
Cell[126475, 2586, 533, 11, 24, "Message"],
Cell[127011, 2599, 430, 9, 24, "Message"],
Cell[127444, 2610, 430, 9, 24, "Message"],
Cell[127877, 2621, 531, 11, 24, "Message"],
Cell[128411, 2634, 502, 10, 24, "Message"],
Cell[128916, 2646, 504, 10, 24, "Message"],
Cell[129423, 2658, 430, 9, 24, "Message"],
Cell[129856, 2669, 2296, 36, 92, "Message"],
Cell[132155, 2707, 2294, 36, 92, "Message"],
Cell[134452, 2745, 2294, 36, 92, "Message"],
Cell[136749, 2783, 533, 11, 24, "Message"],
Cell[137285, 2796, 430, 9, 24, "Message"],
Cell[137718, 2807, 432, 9, 24, "Message"],
Cell[138153, 2818, 531, 11, 24, "Message"],
Cell[138687, 2831, 502, 10, 24, "Message"],
Cell[139192, 2843, 504, 10, 24, "Message"],
Cell[139699, 2855, 702, 13, 26, "Message"],
Cell[140404, 2870, 2220, 35, 72, "Message"],
Cell[142627, 2907, 2220, 35, 72, "Message"],
Cell[144850, 2944, 2220, 35, 72, "Message"],
Cell[147073, 2981, 535, 11, 24, "Message"],
Cell[147611, 2994, 700, 13, 26, "Message"],
Cell[148314, 3009, 699, 13, 26, "Message"],
Cell[149016, 3024, 532, 11, 24, "Message"],
Cell[149551, 3037, 504, 10, 24, "Message"],
Cell[150058, 3049, 504, 10, 24, "Message"],
Cell[150565, 3061, 702, 13, 26, "Message"],
Cell[151270, 3076, 2220, 35, 72, "Message"],
Cell[153493, 3113, 2220, 35, 72, "Message"],
Cell[155716, 3150, 2222, 35, 72, "Message"],
Cell[157941, 3187, 535, 11, 24, "Message"],
Cell[158479, 3200, 700, 13, 26, "Message"],
Cell[159182, 3215, 698, 13, 26, "Message"],
Cell[159883, 3230, 532, 11, 24, "Message"],
Cell[160418, 3243, 502, 10, 24, "Message"],
Cell[160923, 3255, 502, 10, 24, "Message"],
Cell[161428, 3267, 663, 13, 26, "Message"],
Cell[162094, 3282, 2208, 34, 72, "Message"],
Cell[164305, 3318, 2206, 34, 72, "Message"],
Cell[166514, 3354, 2208, 34, 72, "Message"],
Cell[168725, 3390, 535, 11, 24, "Message"],
Cell[169263, 3403, 663, 13, 26, "Message"],
Cell[169929, 3418, 663, 13, 26, "Message"],
Cell[170595, 3433, 531, 11, 24, "Message"],
Cell[171129, 3446, 502, 10, 24, "Message"],
Cell[171634, 3458, 502, 10, 24, "Message"],
Cell[172139, 3470, 684, 13, 26, "Message"],
Cell[172826, 3485, 2196, 34, 72, "Message"],
Cell[175025, 3521, 2196, 34, 72, "Message"],
Cell[177224, 3557, 2196, 34, 72, "Message"],
Cell[179423, 3593, 535, 11, 24, "Message"],
Cell[179961, 3606, 681, 13, 26, "Message"],
Cell[180645, 3621, 684, 13, 26, "Message"],
Cell[181332, 3636, 532, 11, 24, "Message"],
Cell[181867, 3649, 502, 10, 24, "Message"],
Cell[182372, 3661, 502, 10, 24, "Message"],
Cell[182877, 3673, 682, 13, 26, "Message"],
Cell[183562, 3688, 1789, 29, 67, "Message"],
Cell[185354, 3719, 1789, 29, 67, "Message"],
Cell[187146, 3750, 1790, 29, 67, "Message"],
Cell[188939, 3781, 535, 11, 24, "Message"],
Cell[189477, 3794, 681, 13, 26, "Message"],
Cell[190161, 3809, 682, 13, 26, "Message"],
Cell[190846, 3824, 534, 11, 24, "Message"],
Cell[191383, 3837, 502, 10, 24, "Message"],
Cell[191888, 3849, 504, 10, 24, "Message"],
Cell[192395, 3861, 684, 13, 26, "Message"],
Cell[193082, 3876, 1790, 29, 67, "Message"],
Cell[194875, 3907, 1790, 29, 67, "Message"],
Cell[196668, 3938, 1790, 29, 67, "Message"],
Cell[198461, 3969, 533, 11, 24, "Message"],
Cell[198997, 3982, 684, 13, 26, "Message"],
Cell[199684, 3997, 682, 13, 26, "Message"],
Cell[200369, 4012, 532, 11, 24, "Message"],
Cell[200904, 4025, 502, 10, 24, "Message"],
Cell[201409, 4037, 502, 10, 24, "Message"],
Cell[201914, 4049, 682, 13, 26, "Message"],
Cell[202599, 4064, 1788, 29, 67, "Message"],
Cell[204390, 4095, 1790, 29, 67, "Message"],
Cell[206183, 4126, 1790, 29, 67, "Message"],
Cell[207976, 4157, 533, 11, 24, "Message"],
Cell[208512, 4170, 684, 13, 26, "Message"],
Cell[209199, 4185, 682, 13, 26, "Message"],
Cell[209884, 4200, 532, 11, 24, "Message"],
Cell[210419, 4213, 502, 10, 24, "Message"],
Cell[210924, 4225, 502, 10, 24, "Message"],
Cell[211429, 4237, 682, 13, 26, "Message"],
Cell[212114, 4252, 1790, 29, 67, "Message"],
Cell[213907, 4283, 1790, 29, 67, "Message"],
Cell[215700, 4314, 1790, 29, 67, "Message"],
Cell[217493, 4345, 535, 11, 24, "Message"],
Cell[218031, 4358, 682, 13, 26, "Message"],
Cell[218716, 4373, 682, 13, 26, "Message"],
Cell[219401, 4388, 531, 11, 24, "Message"],
Cell[219935, 4401, 504, 10, 24, "Message"],
Cell[220442, 4413, 502, 10, 24, "Message"],
Cell[220947, 4425, 504, 10, 24, "Message"],
Cell[221454, 4437, 502, 10, 24, "Message"],
Cell[221959, 4449, 1791, 28, 67, "Message"],
Cell[223753, 4479, 1789, 28, 67, "Message"],
Cell[225545, 4509, 1789, 28, 67, "Message"],
Cell[227337, 4539, 533, 11, 24, "Message"],
Cell[227873, 4552, 467, 10, 24, "Message"],
Cell[228343, 4564, 465, 10, 24, "Message"],
Cell[228811, 4576, 467, 10, 24, "Message"],
Cell[229281, 4588, 530, 11, 24, "Message"],
Cell[229814, 4601, 501, 10, 24, "Message"],
Cell[230318, 4613, 502, 10, 24, "Message"],
Cell[230823, 4625, 1744, 27, 67, "Message"],
Cell[232570, 4654, 1746, 27, 67, "Message"],
Cell[234319, 4683, 1744, 27, 67, "Message"],
Cell[236066, 4712, 533, 11, 24, "Message"],
Cell[236602, 4725, 502, 10, 24, "Message"],
Cell[237107, 4737, 502, 10, 24, "Message"],
Cell[237612, 4749, 501, 10, 24, "Message"],
Cell[238116, 4761, 501, 10, 24, "Message"],
Cell[238620, 4773, 504, 10, 24, "Message"],
Cell[239127, 4785, 502, 10, 24, "Message"],
Cell[239632, 4797, 698, 13, 26, "Message"],
Cell[240333, 4812, 2124, 35, 72, "Message"],
Cell[242460, 4849, 698, 13, 26, "Message"],
Cell[243161, 4864, 2121, 35, 72, "Message"],
Cell[245285, 4901, 698, 13, 26, "Message"],
Cell[245986, 4916, 535, 11, 24, "Message"],
Cell[246524, 4929, 2122, 35, 72, "Message"],
Cell[248649, 4966, 532, 11, 24, "Message"],
Cell[249184, 4979, 502, 10, 24, "Message"],
Cell[249689, 4991, 502, 10, 24, "Message"],
Cell[250194, 5003, 698, 13, 26, "Message"],
Cell[250895, 5018, 2122, 35, 72, "Message"],
Cell[253020, 5055, 698, 13, 26, "Message"],
Cell[253721, 5070, 2122, 35, 72, "Message"],
Cell[255846, 5107, 698, 13, 26, "Message"],
Cell[256547, 5122, 535, 11, 24, "Message"],
Cell[257085, 5135, 2124, 35, 72, "Message"],
Cell[259212, 5172, 533, 11, 24, "Message"],
Cell[259748, 5185, 502, 10, 24, "Message"],
Cell[260253, 5197, 502, 10, 24, "Message"],
Cell[260758, 5209, 700, 13, 26, "Message"],
Cell[261461, 5224, 2120, 35, 72, "Message"],
Cell[263584, 5261, 698, 13, 26, "Message"],
Cell[264285, 5276, 2117, 35, 72, "Message"],
Cell[266405, 5313, 698, 13, 26, "Message"],
Cell[267106, 5328, 533, 11, 24, "Message"],
Cell[267642, 5341, 2120, 35, 72, "Message"],
Cell[269765, 5378, 533, 11, 24, "Message"],
Cell[270301, 5391, 504, 10, 24, "Message"],
Cell[270808, 5403, 504, 10, 24, "Message"],
Cell[271315, 5415, 656, 12, 26, "Message"],
Cell[271974, 5429, 2030, 33, 72, "Message"],
Cell[274007, 5464, 654, 12, 26, "Message"],
Cell[274664, 5478, 2030, 33, 72, "Message"],
Cell[276697, 5513, 654, 12, 26, "Message"],
Cell[277354, 5527, 533, 11, 24, "Message"],
Cell[277890, 5540, 2028, 33, 72, "Message"],
Cell[279921, 5575, 533, 11, 24, "Message"],
Cell[280457, 5588, 504, 10, 24, "Message"],
Cell[280964, 5600, 502, 10, 24, "Message"],
Cell[281469, 5612, 654, 12, 26, "Message"],
Cell[282126, 5626, 1986, 32, 72, "Message"],
Cell[284115, 5660, 654, 12, 26, "Message"],
Cell[284772, 5674, 1986, 32, 72, "Message"],
Cell[286761, 5708, 656, 12, 26, "Message"],
Cell[287420, 5722, 535, 11, 24, "Message"],
Cell[287958, 5735, 1985, 32, 72, "Message"],
Cell[289946, 5769, 533, 11, 24, "Message"],
Cell[290482, 5782, 504, 10, 24, "Message"],
Cell[290989, 5794, 502, 10, 24, "Message"],
Cell[291494, 5806, 656, 12, 26, "Message"],
Cell[292153, 5820, 1986, 32, 72, "Message"],
Cell[294142, 5854, 653, 12, 26, "Message"],
Cell[294798, 5868, 1985, 32, 72, "Message"],
Cell[296786, 5902, 654, 12, 26, "Message"],
Cell[297443, 5916, 533, 11, 24, "Message"],
Cell[297979, 5929, 1986, 32, 72, "Message"],
Cell[299968, 5963, 533, 11, 24, "Message"],
Cell[300504, 5976, 502, 10, 24, "Message"],
Cell[301009, 5988, 502, 10, 24, "Message"]
}, Open  ]],
Cell[301526, 6001, 1603, 45, 80, "Input"],
Cell[303132, 6048, 94, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[303251, 6053, 231, 5, 64, "Section"],
Cell[CellGroupData[{
Cell[303507, 6062, 10665, 308, 777, "Input"],
Cell[314175, 6372, 2079, 43, 328, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[316303, 6421, 230, 5, 64, "Section"],
Cell[CellGroupData[{
Cell[316558, 6430, 13766, 374, 1066, "Input"],
Cell[330327, 6806, 699, 13, 24, "Message"],
Cell[331029, 6821, 701, 13, 24, "Message"],
Cell[331733, 6836, 699, 13, 24, "Message"],
Cell[332435, 6851, 670, 13, 24, "Message"],
Cell[333108, 6866, 1956, 39, 370, "Output"],
Cell[335067, 6907, 1936, 39, 398, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[337052, 6952, 117, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[337194, 6957, 15897, 409, 1049, "Input"],
Cell[353094, 7368, 2448, 46, 496, "Output"],
Cell[355545, 7416, 2448, 46, 462, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358030, 7467, 1374, 37, 46, "Input"],
Cell[359407, 7506, 2015, 40, 418, "Output"],
Cell[361425, 7548, 2015, 40, 372, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363477, 7593, 685, 19, 28, "Input"],
Cell[364165, 7614, 37431, 624, 243, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
